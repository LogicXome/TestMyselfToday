@model TestMyselfToday.Models.TestResult

@{
    string testResultTitle = string.Empty;
    string testResultUrl = string.Empty;

    testResultTitle = Model.TitleText + "  " + Model.ResultText;
    
    if(!String.IsNullOrEmpty(Model.TextForSharing))
    {
        testResultUrl = Model.TextForSharing.Replace(' ', '-');
        testResultUrl = testResultUrl.Trim().ToLower();
    }
    
    testResultUrl = Request.Url + "/" + testResultUrl;

    ViewBag.Title = testResultTitle;
}

<style type="text/css">
    .testresult-panel {
        background-color: white;
        margin-top: 10px;
    }

    .Skyscraper-ad {
        text-align: center;
        margin-top: 10px;
    }

    .Leaderboard-ad {
        background: none;
        margin-top: 10px;
    }

    /***********************/
    .othertests-panel {
        background: none;
    }

    .test-start {
        vertical-align: bottom;
        text-align: center;
        padding-top: 10px;
        margin: 0px;
    }

        .test-start span {
            padding: 3px;
            padding-right: 50px;
            padding-left: 50px;
            font-size: large;
            font-family: cursive;
        }


    .question-panel {
        padding: 8px;
        border: 1px solid gray;
        margin: 5%;
        border-radius: 5px;
    }

    .question-item {
        text-decoration: none !important;
    }

    .question-item-background div {
        height: 300px;
        background-size: cover !important;
        background-position: 50% 50% !important;
        background-repeat: no-repeat;
        border-radius: 5px;
        overflow-wrap: break-word;
        overflow: hidden;
    }

    .question-item-text {
        text-align: center;
        vertical-align: middle;
        padding: 10%;
        height: 240px;
        color: white;
        font-weight: bold;
        font-size: xx-large;
    }

    .color-overlay {
        background-image: url(images/overlay-pattern2.png);
        left: 0px;
        top: 0px;
    }

    .question-item-background {
    }

    .question-item-text {
        font-family: cursive;
    }

    .result-title {
        padding-top: 5px;
        font-size: 20px;
    }

    .result-text {
        font-size: 30px;
        font-weight: bold;
    }

    .result-detail {
        font-size: 15px;
    }

    .fb-sharing-panel {
        padding: 10px;
    }
</style>

<div class="row">
    <div class="Skyscraper-ad">
        <!-- Test Myself Leaderboard -->
        <ins class="adsbygoogle"
             style="display:inline-block;width:728px;height:90px"
             data-ad-client="ca-pub-8889029058898784"
             data-ad-slot="5898306753"></ins>

    </div>
</div>

<div class="col-md-9">
    <div class="panel testresult-panel">
        <div class="panel-success">
            <div class="panel-body fb-sharing-panel">
                <div class="col-md-offset-4 col-md-1">
                    <div class="fb-share-button" data-href="@testResultUrl" data-layout="button"></div>
                </div>
                <div class="col-md-1">
                    <div class="g-plus" data-action="share" data-annotation="none" data-href="@testResultUrl"></div>
                </div>
                <div class="col-md-1">
                    <a class="twitter-share-button"
                       href="https://twitter.com/share" data-text="@testResultTitle" data-count="none" data-hashtags="TestMyselfToday">
                        Tweet
                    </a>
                </div>
            </div>

            <div class="panel-body">
                <div class="col-md-5 testresult-panel-image">
                    <img src="@Model.ImagePath" alt="Image" class="img-thumbnail" />
                </div>
                <div class="col-md-7 testresult-panel-data">
                    <p class="result-title">@Model.TitleText</p>

                    <p class="result-text">@Model.ResultText</p>

                    <p class="result-detail">
                        @Model.ResultDetail
                    </p>
                </div>
            </div>

            <div class="panel-body fb-sharing-panel">
                <div class="col-md-offset-4 col-md-1">
                    <div class="fb-share-button" data-href="@testResultUrl" data-layout="button"></div>
                </div>
                <div class="col-md-1">
                    <div class="g-plus" data-action="share" data-annotation="none" data-href="@testResultUrl"></div>
                </div>
                <div class="col-md-1">
                    <a class="twitter-share-button"
                       href="https://twitter.com/share" data-text="@testResultTitle" data-count="none" data-hashtags="TestMyselfToday">
                        Tweet
                    </a>
                </div>
            </div>
        </div>
    </div>
    @{
        string testFriendlyUrl = string.Empty;

        if (!String.IsNullOrEmpty(Model.Test.TextForSharing))
        {
            testFriendlyUrl = Model.Test.TextForSharing.Replace(' ', '-');
            testFriendlyUrl = testFriendlyUrl.Trim().ToLower();
        }      
    }
    <div class="panel-body">
        <div class="col-md-offset-4 col-md-4">
            <h3><a href="@Url.Action("Test", "Home", new { id = Model.TestId, ignoreThis = testFriendlyUrl })" class="label-link label label-success col-md-12">@Session["TestAgain"]</a></h3>
        </div>
    </div>
</div>
<div class="col-md-3">
    <!-- Test Myself Skyscraper -->
    <div class="panel Leaderboard-ad">
        <ins class=" adsbygoogle"
             style="display:inline-block;width:300px;height:600px"
             data-ad-client="ca-pub-8889029058898784"
             data-ad-slot="8851773155">
        </ins>
    </div>
</div>

<div class="panel othertests-panel">
    <div class="panel-success">
        <div class="panel-body">
            <div class="row">
                <h3 class="col-md-4">
                    <span class="label-link label label-success">@Session["TestOther"]</span>
                </h3>
            </div>
            <div class="row">
                @foreach (var item in Model.Test.RelatedTests)
                {                    
                    if (!String.IsNullOrEmpty(item.Test.TextForSharing))
                    {
                        testFriendlyUrl = item.Test.TextForSharing.Replace(' ', '-');
                        testFriendlyUrl = testFriendlyUrl.Trim().ToLower();
                    }
                    
                <div class="col-md-4">
                    <div class="question-panel">
                        <div class="question-item-background" style="background-image: url(@item.Test1.ImagePath);">
                            <div class="color-overlay">
                                <p class="question-item-text">
                                    @item.Test1.Title
                                </p>
                                <p class="test-start">
                                    <a href="@Url.Action("Test", "Home", new { id = item.Test1.Id, ignoreThis = testFriendlyUrl })">
                                        <span class="btn btn-primary btn-lg">@Session["TestStart"]</span>
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <div id="fb-root"></div>
    <script>
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&appId=1381627395391335&version=v2.3";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));</script>
    <!-- Place this tag after the last share tag. -->
    <script type="text/javascript">
        (function () {
            var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
            po.src = 'https://apis.google.com/js/platform.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
        })();
    </script>
    <script>
        window.twttr = (function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], t = window.twttr || {}; if (d.getElementById(id)) return t; js = d.createElement(s); js.id = id; js.src = "https://platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); t._e = []; t.ready = function (f) { t._e.push(f); }; return t; }(document, "script", "twitter-wjs"));
    </script>

}
